# Generated by Django 5.2 on 2025-04-23 18:44

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ads', '0002_banner_click_url'),
    ]

    operations = [
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название эксперимента')),
                ('experiment_type', models.CharField(choices=[('banner_design', 'Дизайн баннера'), ('cta_button', 'Текст кнопки'), ('pricing', 'Ценовая стратегия'), ('targeting', 'Таргетинг'), ('placement', 'Размещение')], max_length=20, verbose_name='Тип эксперимента')),
                ('start_date', models.DateTimeField(verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный эксперимент')),
                ('target_metric', models.CharField(default='ctr', help_text='Метрика для оценки эффективности (CTR, конверсии и т.д.)', max_length=50, verbose_name='Целевая метрика')),
                ('min_sample_size', models.PositiveIntegerField(default=1000, help_text='Минимальный размер выборки для статистической значимости', verbose_name='Минимальный размер выборки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='ads.campaign', verbose_name='Рекламная кампания')),
            ],
            options={
                'verbose_name': 'Эксперимент',
                'verbose_name_plural': 'Эксперименты',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='TargetingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название группы')),
                ('criteria', models.JSONField(help_text='Критерии таргетинга (гео, устройства, интересы и т.д.)', verbose_name='Критерии таргетинга')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активная группа')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targeting_groups', to='experiments.experiment', verbose_name='Эксперимент')),
            ],
            options={
                'verbose_name': 'Группа таргетинга',
                'verbose_name_plural': 'Группы таргетинга',
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название варианта')),
                ('weight', models.PositiveSmallIntegerField(default=50, help_text='Вес варианта в процентах', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Вес варианта (%)')),
                ('is_control', models.BooleanField(default=False, help_text='Является ли вариант контрольной группой', verbose_name='Контрольная группа')),
                ('config', models.JSONField(help_text='Конфигурация варианта (зависит от типа эксперимента)', verbose_name='Конфигурация')),
                ('banner', models.ForeignKey(blank=True, help_text='Связанный баннер (для экспериментов с баннерами)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ads.banner', verbose_name='Связанный баннер')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='experiments.experiment', verbose_name='Эксперимент')),
            ],
            options={
                'verbose_name': 'Вариант эксперимента',
                'verbose_name_plural': 'Варианты экспериментов',
                'unique_together': {('experiment', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ExperimentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('impressions', models.PositiveIntegerField(default=0, verbose_name='Показы')),
                ('clicks', models.PositiveIntegerField(default=0, verbose_name='Клики')),
                ('conversions', models.PositiveIntegerField(default=0, verbose_name='Конверсии')),
                ('spend', models.DecimalField(decimal_places=2, default=Decimal('0.0'), max_digits=12, verbose_name='Затраты')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Дополнительные данные')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='experiments.experiment', verbose_name='Эксперимент')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='experiments.variant', verbose_name='Вариант')),
            ],
            options={
                'verbose_name': 'Результат эксперимента',
                'verbose_name_plural': 'Результаты экспериментов',
                'ordering': ['date'],
                'unique_together': {('experiment', 'variant', 'date')},
            },
        ),
    ]
